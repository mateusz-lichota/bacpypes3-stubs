"""
This type stub file was generated by pyright.
"""

from __future__ import annotations
import datetime
from typing import Any as _Any, Optional, overload
from .debugging import bacpypes_debugging

from .pdu import (
    Address as _Address,
    IPv4Address,
    IPv6Address,
)

from .constructeddata import (
    Any,
    AnyAtomic,
    ArrayOf,
    Choice,
    Sequence,
    SequenceOf,
    ListOf,
)
from .primitivedata import (
    BitString,
    Date,
    Enumerated,
    OctetString,
    Time,
    Unsigned,
    TagList,
)

from .vendor import VendorInfo

"""
Base Types
"""
_debug = ...
_log = ...

class AccessAuthenticationFactorDisable(Enumerated):
    _vendor_range = ...
    none = ...
    disabled = ...
    disabledLost = ...
    disabledStolen = ...
    disabledDamaged = ...
    disabledDestroyed = ...

class AccessCredentialDisable(Enumerated):
    _vendor_range = ...
    none = ...
    disable = ...
    disableManual = ...
    disableLockout = ...

class AccessCredentialDisableReason(Enumerated):
    disabled = ...
    disabledNeedsProvisioning = ...
    disabledUnassigned = ...
    disabledNotYetActive = ...
    disabledExpired = ...
    disabledLockout = ...
    disabledMaxDays = ...
    disabledMaxUses = ...
    disabledInactivity = ...
    disabledManual = ...

class AccessEvent(Enumerated):
    _vendor_range = ...
    none = ...
    granted = ...
    muster = ...
    passbackDetected = ...
    duress = ...
    trace = ...
    lockoutMaxAttempts = ...
    lockoutOther = ...
    lockoutRelinquished = ...
    lockedByHigherPriority = ...
    outOfService = ...
    outOfServiceRelinquished = ...
    accompanimentBy = ...
    authenticationFactorRead = ...
    authorizationDelayed = ...
    verificationRequired = ...
    deniedDenyAll = ...
    deniedUnknownCredential = ...
    deniedAuthenticationUnavailable = ...
    deniedAuthenticationFactorTimeout = ...
    deniedIncorrectAuthenticationFactor = ...
    deniedZoneNoAccessRights = ...
    deniedPointNoAccessRights = ...
    deniedNoAccessRights = ...
    deniedOutOfTimeRange = ...
    deniedThreatLevel = ...
    deniedPassback = ...
    deniedUnexpectedLocationUsage = ...
    deniedMaxAttempts = ...
    deniedLowerOccupancyLimit = ...
    deniedUpperOccupancyLimit = ...
    deniedAuthenticationFactorLost = ...
    deniedAuthenticationFactorStolen = ...
    deniedAuthenticationFactorDamaged = ...
    deniedAuthenticationFactorDestroyed = ...
    deniedAuthenticationFactorDisabled = ...
    deniedAuthenticationFactorError = ...
    deniedCredentialUnassigned = ...
    deniedCredentialNotProvisioned = ...
    deniedCredentialNotYetActive = ...
    deniedCredentialExpired = ...
    deniedCredentialManualDisable = ...
    deniedCredentialLockout = ...
    deniedCredentialMaxDays = ...
    deniedCredentialMaxUses = ...
    deniedCredentialInactivity = ...
    deniedCredentialDisabled = ...
    deniedNoAccompaniment = ...
    deniedIncorrectAccompaniment = ...
    deniedLockout = ...
    deniedVerificationFailed = ...
    deniedVerificationTimeout = ...
    deniedOther = ...

class AccessPassbackMode(Enumerated):
    passbackOff = ...
    hardPassback = ...
    softPassback = ...

class AccessRuleLocationSpecifier(Enumerated):
    specified = ...
    all = ...

class AccessRuleTimeRangeSpecifier(Enumerated):
    specified = ...
    always = ...

class AccessUserType(Enumerated):
    _vendor_range = ...
    asset = ...
    group = ...
    person = ...

class AccessZoneOccupancyState(Enumerated):
    _vendor_range = ...
    normal = ...
    belowLowerLimit = ...
    atLowerLimit = ...
    atUpperLimit = ...
    aboveUpperLimit = ...
    disabled = ...
    notSupported = ...

class AccumulatorRecordAccumulatorStatus(Enumerated):
    normal = ...
    starting = ...
    recovered = ...
    abnormal = ...
    failed = ...

class Action(Enumerated):
    direct = ...
    reverse = ...

class AuditLevel(Enumerated):
    _vendor_range = ...
    none = ...
    auditAll = ...
    auditConfig = ...
    default = ...

class AuditOperation(Enumerated):
    _vendor_range = ...
    read = ...
    write = ...
    create = ...
    delete = ...
    lifeSafety = ...
    acknowledgeAlarm = ...
    deviceDisableComm = ...
    deviceEnableComm = ...
    deviceReset = ...
    deviceBackup = ...
    deviceRestore = ...
    subscription = ...
    notification = ...
    auditingFailure = ...
    networkChanges = ...
    general = ...

class AuthenticationFactorType(Enumerated):
    undefined = ...
    error = ...
    custom = ...
    simpleNumber16 = ...
    simpleNumber32 = ...
    simpleNumber56 = ...
    simpleAlphaNumeric = ...
    abaTrack2 = ...
    wiegand26 = ...
    wiegand37 = ...
    wiegand37facility = ...
    facility16card32 = ...
    facility32card32 = ...
    fascN = ...
    fascNbcd = ...
    fascNlarge = ...
    fascNlargeBcd = ...
    gsa75 = ...
    chuid = ...
    chuidFull = ...
    guid = ...
    cbeffA = ...
    cbeffB = ...
    cbeffC = ...
    userPassword = ...

class AuthenticationStatus(Enumerated):
    notReady = ...
    ready = ...
    disabled = ...
    waitingForAuthenticationFactor = ...
    waitingForAccompaniment = ...
    waitingForVerification = ...
    inProgress = ...

class AuthorizationException(Enumerated):
    _vendor_range = ...
    passback = ...
    occupancyCheck = ...
    accessRights = ...
    lockout = ...
    deny = ...
    verification = ...
    authorizationDelay = ...

class AuthorizationMode(Enumerated):
    _vendor_range = ...
    authorize = ...
    grantActive = ...
    denyAll = ...
    verificationRequired = ...
    authorizationDelayed = ...
    none = ...

class BackupState(Enumerated):
    idle = ...
    preparingForBackup = ...
    preparingForRestore = ...
    performingABackup = ...
    performingARestore = ...
    backupFailure = ...
    restoreFailure = ...

class BinaryLightingPV(Enumerated):
    _vendor_range = ...
    off = ...
    on = ...
    warn = ...
    warnOff = ...
    warnRelinquish = ...
    stop = ...

class BinaryPV(Enumerated):
    inactive = ...
    active = ...

class ConfirmedTextMessageRequestMessagePriority(Enumerated):
    normal = ...
    urgent = ...

class DeviceCommunicationControlRequestEnableDisable(Enumerated):
    enable = ...
    disable = ...
    disableInitiation = ...

class DeviceStatus(Enumerated):
    _vendor_range = ...
    operational = ...
    operationalReadOnly = ...
    downloadRequired = ...
    downloadInProgress = ...
    nonOperational = ...
    backupInProgress = ...

class DoorAlarmState(Enumerated):
    _vendor_range = ...
    normal = ...
    alarm = ...
    doorOpenTooLong = ...
    forcedOpen = ...
    tamper = ...
    doorFault = ...
    lockDown = ...
    freeAccess = ...
    egressOpen = ...

class DoorSecuredStatus(Enumerated):
    secured = ...
    unsecured = ...
    unknown = ...

class DoorStatus(Enumerated):
    closed = ...
    opened = ...
    unknown = ...

class DoorValue(Enumerated):
    lock = ...
    unlock = ...
    pulseUnlock = ...
    extendedPulseUnlock = ...

class EngineeringUnits(Enumerated):
    _vendor_range = ...
    amperes = ...
    ampereSeconds = ...
    amperesPerMeter = ...
    amperesPerSquareMeter = ...
    ampereSquareHours = ...
    ampereSquareMeters = ...
    bars = ...
    becquerels = ...
    btus = ...
    btusPerHour = ...
    btusPerPound = ...
    btusPerPoundDryAir = ...
    candelas = ...
    candelasPerSquareMeter = ...
    centimeters = ...
    centimetersOfMercury = ...
    centimetersOfWater = ...
    cubicFeet = ...
    cubicFeetPerDay = ...
    cubicFeetPerHour = ...
    cubicFeetPerMinute = ...
    cubicFeetPerSecond = ...
    cubicMeters = ...
    cubicMetersPerDay = ...
    cubicMetersPerHour = ...
    cubicMetersPerMinute = ...
    cubicMetersPerSecond = ...
    currency10 = ...
    currency1 = ...
    currency2 = ...
    currency3 = ...
    currency4 = ...
    currency5 = ...
    currency6 = ...
    currency7 = ...
    currency8 = ...
    currency9 = ...
    cyclesPerHour = ...
    cyclesPerMinute = ...
    days = ...
    decibels = ...
    decibelsA = ...
    decibelsMillivolt = ...
    decibelsVolt = ...
    degreeDaysCelsius = ...
    degreeDaysFahrenheit = ...
    degreesAngular = ...
    degreesCelsius = ...
    degreesCelsiusPerHour = ...
    degreesCelsiusPerMinute = ...
    degreesFahrenheit = ...
    degreesFahrenheitPerHour = ...
    degreesFahrenheitPerMinute = ...
    degreesKelvin = ...
    degreesKelvinPerHour = ...
    degreesKelvinPerMinute = ...
    degreesPhase = ...
    deltaDegreesFahrenheit = ...
    deltaDegreesKelvin = ...
    farads = ...
    feet = ...
    feetPerMinute = ...
    feetPerSecond = ...
    footCandles = ...
    grams = ...
    gramsOfWaterPerKilogramDryAir = ...
    gramsPerCubicCentimeter = ...
    gramsPerCubicMeter = ...
    gramsPerGram = ...
    gramsPerKilogram = ...
    gramsPerLiter = ...
    gramsPerMilliliter = ...
    gramsPerMinute = ...
    gramsPerSecond = ...
    gramsPerSquareMeter = ...
    gray = ...
    hectopascals = ...
    henrys = ...
    hertz = ...
    horsepower = ...
    hours = ...
    hundredthsSeconds = ...
    imperialGallons = ...
    imperialGallonsPerMinute = ...
    inches = ...
    inchesOfMercury = ...
    inchesOfWater = ...
    joules = ...
    jouleSeconds = ...
    joulesPerCubicMeter = ...
    joulesPerDegreeKelvin = ...
    joulesPerHours = ...
    joulesPerKilogramDegreeKelvin = ...
    joulesPerKilogramDryAir = ...
    kilobecquerels = ...
    kiloBtus = ...
    kiloBtusPerHour = ...
    kilograms = ...
    kilogramsPerCubicMeter = ...
    kilogramsPerHour = ...
    kilogramsPerKilogram = ...
    kilogramsPerMinute = ...
    kilogramsPerSecond = ...
    kilohertz = ...
    kilohms = ...
    kilojoules = ...
    kilojoulesPerDegreeKelvin = ...
    kilojoulesPerKilogram = ...
    kilojoulesPerKilogramDryAir = ...
    kilometers = ...
    kilometersPerHour = ...
    kilopascals = ...
    kilovoltAmpereHours = ...
    kilovoltAmpereHoursReactive = ...
    kilovoltAmperes = ...
    kilovoltAmperesReactive = ...
    kilovolts = ...
    kilowattHours = ...
    kilowattHoursPerSquareFoot = ...
    kilowattHoursPerSquareMeter = ...
    kilowattHoursReactive = ...
    kilowatts = ...
    liters = ...
    litersPerHour = ...
    litersPerMinute = ...
    litersPerSecond = ...
    lumens = ...
    luxes = ...
    megabecquerels = ...
    megaBtus = ...
    megahertz = ...
    megajoules = ...
    megajoulesPerDegreeKelvin = ...
    megajoulesPerKilogramDryAir = ...
    megajoulesPerSquareFoot = ...
    megajoulesPerSquareMeter = ...
    megavoltAmpereHours = ...
    megavoltAmpereHoursReactive = ...
    megavoltAmperes = ...
    megavoltAmperesReactive = ...
    megavolts = ...
    megawattHours = ...
    megawattHoursReactive = ...
    megawatts = ...
    megohms = ...
    meters = ...
    metersPerHour = ...
    metersPerMinute = ...
    metersPerSecond = ...
    metersPerSecondPerSecond = ...
    microgramsPerCubicMeter = ...
    microgramsPerLiter = ...
    microgray = ...
    micrometers = ...
    microSiemens = ...
    microsieverts = ...
    microsievertsPerHour = ...
    milesPerHour = ...
    milliamperes = ...
    millibars = ...
    milligrams = ...
    milligramsPerCubicMeter = ...
    milligramsPerGram = ...
    milligramsPerKilogram = ...
    milligramsPerLiter = ...
    milligray = ...
    milliliters = ...
    millilitersPerSecond = ...
    millimeters = ...
    millimetersOfMercury = ...
    millimetersOfWater = ...
    millimetersPerMinute = ...
    millimetersPerSecond = ...
    milliohms = ...
    milliseconds = ...
    millisiemens = ...
    millisieverts = ...
    millivolts = ...
    milliwatts = ...
    minutes = ...
    minutesPerDegreeKelvin = ...
    months = ...
    nanogramsPerCubicMeter = ...
    nephelometricTurbidityUnit = ...
    newton = ...
    newtonMeters = ...
    newtonSeconds = ...
    newtonsPerMeter = ...
    noUnits = ...
    ohmMeterPerSquareMeter = ...
    ohmMeters = ...
    ohms = ...
    partsPerBillion = ...
    partsPerMillion = ...
    pascals = ...
    pascalSeconds = ...
    percent = ...
    percentObscurationPerFoot = ...
    percentObscurationPerMeter = ...
    percentPerSecond = ...
    percentRelativeHumidity = ...
    perHour = ...
    perMille = ...
    perMinute = ...
    perSecond = ...
    pH = ...
    poundsForcePerSquareInch = ...
    poundsMass = ...
    poundsMassPerHour = ...
    poundsMassPerMinute = ...
    poundsMassPerSecond = ...
    powerFactor = ...
    psiPerDegreeFahrenheit = ...
    radians = ...
    radiansPerSecond = ...
    revolutionsPerMinute = ...
    seconds = ...
    siemens = ...
    siemensPerMeter = ...
    sieverts = ...
    squareCentimeters = ...
    squareFeet = ...
    squareInches = ...
    squareMeters = ...
    squareMetersPerNewton = ...
    teslas = ...
    therms = ...
    tonHours = ...
    tons = ...
    tonsPerHour = ...
    tonsRefrigeration = ...
    usGallons = ...
    usGallonsPerHour = ...
    usGallonsPerMinute = ...
    voltAmpereHours = ...
    voltAmpereHoursReactive = ...
    voltAmperes = ...
    voltAmperesReactive = ...
    volts = ...
    voltsPerDegreeKelvin = ...
    voltsPerMeter = ...
    voltsSquareHours = ...
    wattHours = ...
    wattHoursPerCubicMeter = ...
    wattHoursReactive = ...
    watts = ...
    wattsPerMeterPerDegreeKelvin = ...
    wattsPerSquareFoot = ...
    wattsPerSquareMeter = ...
    wattsPerSquareMeterDegreeKelvin = ...
    webers = ...
    weeks = ...
    years = ...

class ErrorClass(Enumerated):
    device = ...
    object = ...
    property = ...
    resources = ...
    security = ...
    services = ...
    vt = ...
    communication = ...

class ErrorCode(Enumerated):
    abortApduTooLong = ...
    abortApplicationExceededReplyTime = ...
    abortBufferOverflow = ...
    abortInsufficientSecurity = ...
    abortInvalidApduInThisState = ...
    abortOther = ...
    abortOutOfResources = ...
    abortPreemptedByHigherPriorityTask = ...
    abortProprietary = ...
    abortSecurityError = ...
    abortSegmentationNotSupported = ...
    abortTsmTimeout = ...
    abortWindowSizeOutOfRange = ...
    accessDenied = ...
    addressingError = ...
    badDestinationAddress = ...
    badDestinationDeviceId = ...
    badSignature = ...
    badSourceAddress = ...
    badTimestamp = ...
    busy = ...
    bvlcFunctionUnknown = ...
    bvlcProprietaryFunctionUnknown = ...
    cannotUseKey = ...
    cannotVerifyMessageId = ...
    characterSetNotSupported = ...
    communicationDisabled = ...
    configurationInProgress = ...
    correctKeyRevision = ...
    covSubscriptionFailed = ...
    datatypeNotSupported = ...
    deleteFdtEntryFailed = ...
    destinationDeviceIdRequired = ...
    deviceBusy = ...
    distributeBroadcastFailed = ...
    dnsError = ...
    dnsNameResolutionFailed = ...
    dnsResolverFailure = ...
    dnsUnavailable = ...
    duplicateEntry = ...
    duplicateMessage = ...
    duplicateName = ...
    duplicateObjectId = ...
    dynamicCreationNotSupported = ...
    encryptionNotConfigured = ...
    encryptionRequired = ...
    fileAccessDenied = ...
    fileFull = ...
    headerEncodingError = ...
    headerNotUnderstood = ...
    httpError = ...
    httpNotAServer = ...
    httpNoUpgrade = ...
    httpProxyAuthenticationFailed = ...
    httpResourceNotLocal = ...
    httpResponseMissingHeader = ...
    httpResponseSyntaxError = ...
    httpResponseTimeout = ...
    httpResponseValueError = ...
    httpTemporaryUnavailable = ...
    httpUnexpectedResponseCode = ...
    httpUpgradeError = ...
    httpUpgradeRequired = ...
    httpWebsocketHeaderError = ...
    inconsistentConfiguration = ...
    inconsistentObjectType = ...
    inconsistentParameters = ...
    inconsistentSelectionCriterion = ...
    incorrectKey = ...
    internalError = ...
    invalidArrayIndex = ...
    invalidConfigurationData = ...
    invalidDataEncoding = ...
    invalidDataType = ...
    invalidEventState = ...
    invalidFileAccessMethod = ...
    invalidFileStartPosition = ...
    invalidKeyData = ...
    invalidParameterDataType = ...
    invalidTag = ...
    invalidTimeStamp = ...
    invalidValueInThisState = ...
    ipAddressNotReachable = ...
    ipError = ...
    keyUpdateInProgress = ...
    listElementNotFound = ...
    listItemNotNumbered = ...
    listItemNotTimestamped = ...
    logBufferFull = ...
    loggedValuePurged = ...
    malformedMessage = ...
    messageIncomplete = ...
    messageTooLong = ...
    missingRequiredParameter = ...
    networkDown = ...
    noAlarmConfigured = ...
    nodeDuplicateVmac = ...
    noObjectsOfSpecifiedType = ...
    noPropertySpecified = ...
    noSpaceForObject = ...
    noSpaceToAddListElement = ...
    noSpaceToWriteProperty = ...
    notABacnetScHub = ...
    notConfigured = ...
    notConfiguredForTriggeredLogging = ...
    notCovProperty = ...
    notKeyServer = ...
    notRouterToDnet = ...
    noVtSessionsAvailable = ...
    objectDeletionNotPermitted = ...
    objectIdentifierAlreadyExists = ...
    operationalProblem = ...
    optionalFunctionalityNotSupported = ...
    other = ...
    outOfMemory = ...
    parameterOutOfRange = ...
    passwordFailure = ...
    payloadExpected = ...
    propertyIsNotAList = ...
    propertyIsNotAnArray = ...
    readAccessDenied = ...
    readBdtFailed = ...
    readFdtFailed = ...
    registerForeignDeviceFailed = ...
    rejectBufferOverflow = ...
    rejectInconsistentParameters = ...
    rejectInvalidParameterDataType = ...
    rejectInvalidTag = ...
    rejectMissingRequiredParameter = ...
    rejectOther = ...
    rejectParameterOutOfRange = ...
    rejectProprietary = ...
    rejectTooManyArguments = ...
    rejectUndefinedEnumeration = ...
    rejectUnrecognizedService = ...
    routerBusy = ...
    securityError = ...
    securityNotConfigured = ...
    serviceRequestDenied = ...
    sourceSecurityRequired = ...
    success = ...
    tcpClosedByLocal = ...
    tcpClosedOther = ...
    tcpConnectionRefused = ...
    tcpConnectTimeout = ...
    tcpError = ...
    timeout = ...
    tleError = ...
    tlsClientAuthenticationFailed = ...
    tlsClientCertificateError = ...
    tlsClientCertificateExpired = ...
    tlsClientCertificateRevoked = ...
    tlsServerAuthenticationFailed = ...
    tlsServerCertificateError = ...
    tlsServerCertificateExpired = ...
    tlsServerCertificateRevoked = ...
    tooManyKeys = ...
    unexpectedData = ...
    unknownAuthenticationType = ...
    unknownDevice = ...
    unknownFileSize = ...
    unknownKey = ...
    unknownKeyRevision = ...
    unknownNetworkMessage = ...
    unknownObject = ...
    unknownProperty = ...
    unknownRoute = ...
    unknownSourceMessage = ...
    unknownSubscription = ...
    unknownVtClass = ...
    unknownVtSession = ...
    unsupportedObjectType = ...
    valueNotInitialized = ...
    valueOutOfRange = ...
    valueTooLong = ...
    vtSessionAlreadyClosed = ...
    vtSessionTerminationFailure = ...
    websocketClosedAbnormally = ...
    websocketClosedByPeer = ...
    websocketCloseError = ...
    websocketDataAgainstPolicy = ...
    websocketDataInconsistent = ...
    websocketDataNotAccepted = ...
    websocketEndpointLeaves = ...
    websocketError = ...
    websocketExtensionMissing = ...
    websocketFrameTooLong = ...
    websocketProtocolError = ...
    websocketRequestUnavailable = ...
    websocketSchemeNotSupported = ...
    websocketUnknownControlMessage = ...
    writeAccessDenied = ...
    writeBdtFailed = ...

class EscalatorFault(Enumerated):
    _vendor_range = ...
    controllerFault = ...
    driveAndMotorFault = ...
    mechanicalComponentFault = ...
    overspeedFault = ...
    powerSupplyFault = ...
    safetyDeviceFault = ...
    controllerSupplyFault = ...
    driveTemperatureExceeded = ...
    combPlateFault = ...

class EscalatorMode(Enumerated):
    _vendor_range = ...
    unknown = ...
    stop = ...
    up = ...
    down = ...
    inspection = ...
    outOfService = ...

class EscalatorOperationDirection(Enumerated):
    _vendor_range = ...
    unknown = ...
    stopped = ...
    upRatedSpeed = ...
    upReducedSpeed = ...
    downRatedSpeed = ...
    downReducedSpeed = ...

class EventState(Enumerated):
    _vendor_range = ...
    normal = ...
    fault = ...
    offnormal = ...
    highLimit = ...
    lowLimit = ...
    lifeSafetyAlarm = ...

class EventType(Enumerated):
    _vendor_range = ...
    changeOfBitstring = ...
    changeOfState = ...
    changeOfValue = ...
    commandFailure = ...
    floatingLimit = ...
    outOfRange = ...
    changeOfLifeSafety = ...
    extended = ...
    bufferReady = ...
    unsignedRange = ...
    accessEvent = ...
    doubleOutOfRange = ...
    signedOutOfRange = ...
    unsignedOutOfRange = ...
    changeOfCharacterstring = ...
    changeOfStatusFlags = ...
    changeOfReliability = ...
    none = ...
    changeOfDiscreteValue = ...
    changeOfTimer = ...

class FaultType(Enumerated):
    none = ...
    faultCharacterstring = ...
    faultExtended = ...
    faultLifeSafety = ...
    faultState = ...
    faultStatusFlags = ...
    faultOutOfRange = ...
    faultListed = ...

class FileAccessMethod(Enumerated):
    recordAccess = ...
    streamAccess = ...

class GetEnrollmentSummaryRequestAcknowledgmentFilterType(Enumerated):
    all = ...
    acked = ...
    notAcked = ...

class GetEnrollmentSummaryRequestEventStateFilterType(Enumerated):
    offnormal = ...
    fault = ...
    normal = ...
    all = ...
    active = ...

class IPMode(Enumerated):
    normal = ...
    foreign = ...
    bbmd = ...

class LifeSafetyMode(Enumerated):
    _vendor_range = ...
    off = ...
    on = ...
    test = ...
    manned = ...
    unmanned = ...
    armed = ...
    disarmed = ...
    prearmed = ...
    slow = ...
    fast = ...
    disconnected = ...
    enabled = ...
    disabled = ...
    automaticReleaseDisabled = ...
    default = ...

class LifeSafetyOperation(Enumerated):
    _vendor_range = ...
    none = ...
    silence = ...
    silenceAudible = ...
    silenceVisual = ...
    reset = ...
    resetAlarm = ...
    resetFault = ...
    unsilence = ...
    unsilenceAudible = ...
    unsilenceVisual = ...

class LifeSafetyState(Enumerated):
    _vendor_range = ...
    quiet = ...
    preAlarm = ...
    alarm = ...
    fault = ...
    faultPreAlarm = ...
    faultAlarm = ...
    notReady = ...
    active = ...
    tamper = ...
    testAlarm = ...
    testActive = ...
    testFault = ...
    testFaultAlarm = ...
    holdup = ...
    duress = ...
    tamperAlarm = ...
    abnormal = ...
    emergencyPower = ...
    delayed = ...
    blocked = ...
    localAlarm = ...
    generalAlarm = ...
    supervisory = ...
    testSupervisory = ...

class LiftCarDirection(Enumerated):
    _vendor_range = ...
    unknown = ...
    none = ...
    stopped = ...
    up = ...
    down = ...
    upAndDown = ...

class LiftCarDoorCommand(Enumerated):
    none = ...
    open = ...
    close = ...

class LiftCarDriveStatus(Enumerated):
    _vendor_range = ...
    unknown = ...
    stationary = ...
    braking = ...
    accelerate = ...
    decelerate = ...
    ratedSpeed = ...
    singleFloorJump = ...
    twoFloorJump = ...
    threeFloorJump = ...
    multiFloorJump = ...

class LiftCarMode(Enumerated):
    _vendor_range = ...
    unknown = ...
    normal = ...
    vip = ...
    homing = ...
    parking = ...
    attendantControl = ...
    firefighterControl = ...
    emergencyPower = ...
    inspection = ...
    cabinetRecall = ...
    earthquakeOperation = ...
    fireOperation = ...
    outOfService = ...
    occupantEvacuation = ...

class LiftFault(Enumerated):
    _vendor_range = ...
    controllerFault = ...
    driveAndMotorFault = ...
    governorAndSafetyGearFault = ...
    liftShaftDeviceFault = ...
    powerSupplyFault = ...
    safetyInterlockFault = ...
    doorClosingFault = ...
    doorOpeningFault = ...
    carStoppedOutsideLandingZone = ...
    callButtonStuck = ...
    startFailure = ...
    controllerSupplyFault = ...
    selfTestFailure = ...
    runtimeLimitExceeded = ...
    positionLost = ...
    driveTemperatureExceeded = ...
    loadMeasurementFault = ...

class LiftGroupMode(Enumerated):
    unknown = ...
    normal = ...
    downPeak = ...
    twoWay = ...
    fourWay = ...
    emergencyPower = ...
    upPeak = ...

class LightingInProgress(Enumerated):
    idle = ...
    fadeActive = ...
    rampActive = ...
    notControlled = ...
    other = ...

class LightingOperation(Enumerated):
    _vendor_range = ...
    none = ...
    fadeTo = ...
    rampTo = ...
    stepUp = ...
    stepDown = ...
    stepOn = ...
    stepOff = ...
    warn = ...
    warnOff = ...
    warnRelinquish = ...
    stop = ...

class LightingTransition(Enumerated):
    _vendor_range = ...
    none = ...
    fade = ...
    ramp = ...

class LockStatus(Enumerated):
    locked = ...
    unlocked = ...
    fault = ...
    unknown = ...

class LoggingType(Enumerated):
    _vendor_range = ...
    polled = ...
    cov = ...
    triggered = ...

class Maintenance(Enumerated):
    _vendor_range = ...
    none = ...
    periodicTest = ...
    needServiceOperational = ...
    needServiceInoperative = ...

class NetworkNumberQuality(Enumerated):
    unknown = ...
    learned = ...
    learnedConfigured = ...
    configured = ...

class NetworkPortCommand(Enumerated):
    _vendor_range = ...
    idle = ...
    discardChanges = ...
    renewFdDRegistration = ...
    restartSlaveDiscovery = ...
    renewDHCP = ...
    restartAutonegotiation = ...
    disconnect = ...
    restartPort = ...

class NetworkType(Enumerated):
    _vendor_range = ...
    ethernet = ...
    arcnet = ...
    mstp = ...
    ptp = ...
    lontalk = ...
    ipv4 = ...
    zigbee = ...
    virtual = ...
    ipv6 = ...
    serial = ...

class NodeType(Enumerated):
    unknown = ...
    system = ...
    network = ...
    device = ...
    organizational = ...
    area = ...
    equipment = ...
    point = ...
    collection = ...
    property = ...
    functional = ...
    other = ...
    subsystem = ...
    building = ...
    floor = ...
    section = ...
    module = ...
    tree = ...
    member = ...
    protocol = ...
    room = ...
    zone = ...

class NotifyType(Enumerated):
    alarm = ...
    event = ...
    ackNotification = ...

class Polarity(Enumerated):
    normal = ...
    reverse = ...

class ProgramError(Enumerated):
    _vendor_range = ...
    normal = ...
    loadFailed = ...
    internal = ...
    program = ...
    other = ...

class ProgramRequest(Enumerated):
    ready = ...
    load = ...
    run = ...
    halt = ...
    restart = ...
    unload = ...

class ProgramState(Enumerated):
    idle = ...
    loading = ...
    running = ...
    waiting = ...
    halted = ...
    unloading = ...

class ProtocolLevel(Enumerated):
    physical = ...
    protocol = ...
    bacnetApplication = ...
    nonBacnetApplication = ...

class ReinitializeDeviceRequestReinitializedStateOfDevice(Enumerated):
    coldstart = ...
    warmstart = ...
    startBackup = ...
    endBackup = ...
    startRestore = ...
    endRestore = ...
    abortRestore = ...
    activateChanges = ...

class Relationship(Enumerated):
    _vendor_range = ...
    unknown = ...
    default = ...
    contains = ...
    containedBy = ...
    uses = ...
    usedBy = ...
    commands = ...
    commandedBy = ...
    adjusts = ...
    adjustedBy = ...
    ingress = ...
    egress = ...
    suppliesAir = ...
    receivesAir = ...
    suppliesHotAir = ...
    receivesHotAir = ...
    suppliesCoolAir = ...
    receivesCoolAir = ...
    suppliesPower = ...
    receivesPower = ...
    suppliesGas = ...
    receivesGas = ...
    suppliesWater = ...
    receivesWater = ...
    suppliesHotWater = ...
    receivesHotWater = ...
    suppliesCoolWater = ...
    receivesCoolWater = ...
    suppliesSteam = ...
    receivesSteam = ...

class Reliability(Enumerated):
    _vendor_range = ...
    noFaultDetected = ...
    noSensor = ...
    overRange = ...
    underRange = ...
    openLoop = ...
    shortedLoop = ...
    noOutput = ...
    unreliableOther = ...
    processError = ...
    multiStateFault = ...
    configurationError = ...
    communicationFailure = ...
    memberFault = ...
    monitoredObjectFault = ...
    tripped = ...
    lampFailure = ...
    activationFailure = ...
    renewDHCPFailure = ...
    renewFDRegistrationFailure = ...
    restartAutoNegotiationFailure = ...
    restartFailure = ...
    proprietaryCommandFailure = ...
    faultsListed = ...
    referencedObjectFault = ...
    multiStateOutOfRange = ...

class RestartReason(Enumerated):
    _vendor_range = ...
    unknown = ...
    coldstart = ...
    warmstart = ...
    detectedPowerLost = ...
    detectedPoweredOff = ...
    hardwareWatchdog = ...
    softwareWatchdog = ...
    suspended = ...
    activateChanges = ...

class RouterEntryStatus(Enumerated):
    available = ...
    busy = ...
    disconnected = ...

class SecurityLevel(Enumerated):
    incapable = ...
    plain = ...
    signed = ...
    encrypted = ...
    signedEndToEnd = ...
    encryptedEndToEnd = ...

class SecurityPolicy(Enumerated):
    plainNonTrusted = ...
    plainTrusted = ...
    signedTrusted = ...
    encryptedTrusted = ...

class Segmentation(Enumerated):
    segmentedBoth = ...
    segmentedTransmit = ...
    segmentedReceive = ...
    noSegmentation = ...

class ShedState(Enumerated):
    shedInactive = ...
    shedRequestPending = ...
    shedCompliant = ...
    shedNonCompliant = ...

class SilencedState(Enumerated):
    _vendor_range = ...
    unsilenced = ...
    audibleSilenced = ...
    visibleSilenced = ...
    allSilenced = ...

class TimerState(Enumerated):
    idle = ...
    running = ...
    expired = ...

class TimerTransition(Enumerated):
    none = ...
    idleToRunning = ...
    runningToIdle = ...
    runningToRunning = ...
    runningToExpired = ...
    forcedToExpired = ...
    expiredToIdle = ...
    expiredToRunning = ...

class UnconfirmedTextMessageRequestMessagePriority(Enumerated):
    normal = ...
    urgent = ...

class VTClass(Enumerated):
    _vendor_range = ...
    defaultTerminal = ...
    ansiX364 = ...
    decVt52 = ...
    decVt100 = ...
    decVt220 = ...
    hp70094 = ...
    ibm3130 = ...

class WriteStatus(Enumerated):
    idle = ...
    inProgress = ...
    successful = ...
    failed = ...

class AuditOperationFlags(BitString):
    _vendor_range = ...
    read = ...
    write = ...
    create = ...
    delete = ...
    lifeSafety = ...
    acknowledgeAlarm = ...
    deviceDisableComm = ...
    deviceEnableComm = ...
    deviceReset = ...
    deviceBackup = ...
    deviceRestore = ...
    subscription = ...
    notification = ...
    auditingFailure = ...
    networkChanges = ...
    general = ...

class DaysOfWeek(BitString):
    monday = ...
    tuesday = ...
    wednesday = ...
    thursday = ...
    friday = ...
    saturday = ...
    sunday = ...

class EventTransitionBits(BitString):
    toOffnormal = ...
    toFault = ...
    toNormal = ...

class LimitEnable(BitString):
    lowLimitEnable = ...
    highLimitEnable = ...

class LogStatus(BitString):
    logDisabled = ...
    bufferPurged = ...
    logInterrupted = ...

class ObjectTypesSupported(BitString):
    analogInput = ...
    analogOutput = ...
    analogValue = ...
    binaryInput = ...
    binaryOutput = ...
    binaryValue = ...
    calendar = ...
    command = ...
    device = ...
    eventEnrollment = ...
    file = ...
    group = ...
    loop = ...
    multiStateInput = ...
    multiStateOutput = ...
    notificationClass = ...
    program = ...
    schedule = ...
    averaging = ...
    multiStateValue = ...
    trendLog = ...
    lifeSafetyPoint = ...
    lifeSafetyZone = ...
    accumulator = ...
    pulseConverter = ...
    eventLog = ...
    globalGroup = ...
    trendLogMultiple = ...
    loadControl = ...
    structuredView = ...
    accessDoor = ...
    accessCredential = ...
    accessPoint = ...
    accessRights = ...
    accessUser = ...
    accessZone = ...
    credentialDataInput = ...
    networkPort = ...
    networkSecurity = ...
    bitstringValue = ...
    characterstringValue = ...
    datePatternValue = ...
    dateValue = ...
    datetimePatternValue = ...
    datetimeValue = ...
    integerValue = ...
    largeAnalogValue = ...
    octetstringValue = ...
    positiveIntegerValue = ...
    timePatternValue = ...
    timeValue = ...
    notificationForwarder = ...
    alertEnrollment = ...
    channel = ...
    lightingOutput = ...
    binaryLightingOutput = ...
    networkPort = ...
    elevatorGroup = ...
    escalator = ...
    lift = ...
    staging = ...
    auditLog = ...
    auditReporter = ...

class PriorityFilter(BitString):
    manualLifeSafety = ...
    automaticLifeSafety = ...
    priority3 = ...
    priority4 = ...
    criticalEquipmentControls = ...
    minimumOnOff = ...
    priority7 = ...
    manualOperator = ...
    priority9 = ...
    priority10 = ...
    priority11 = ...
    priority12 = ...
    priority13 = ...
    priority14 = ...
    priority15 = ...
    priority16 = ...

class ResultFlags(BitString):
    firstItem = ...
    lastItem = ...
    moreItems = ...

class ServicesSupported(BitString):
    acknowledgeAlarm = ...
    confirmedCOVNotification = ...
    confirmedEventNotification = ...
    getAlarmSummary = ...
    getEnrollmentSummary = ...
    subscribeCOV = ...
    atomicReadFile = ...
    atomicWriteFile = ...
    addListElement = ...
    removeListElement = ...
    createObject = ...
    deleteObject = ...
    readProperty = ...
    readPropertyMultiple = ...
    writeProperty = ...
    writePropertyMultiple = ...
    deviceCommunicationControl = ...
    confirmedPrivateTransfer = ...
    confirmedTextMessage = ...
    reinitializeDevice = ...
    vtOpen = ...
    vtClose = ...
    vtData = ...
    iAm = ...
    iHave = ...
    unconfirmedCOVNotification = ...
    unconfirmedEventNotification = ...
    unconfirmedPrivateTransfer = ...
    unconfirmedTextMessage = ...
    timeSynchronization = ...
    whoHas = ...
    whoIs = ...
    readRange = ...
    utcTimeSynchronization = ...
    lifeSafetyOperation = ...
    subscribeCOVProperty = ...
    getEventInformation = ...
    writeGroup = ...
    subscribeCOVPropertyMultiple = ...
    confirmedCOVNotificationMultiple = ...
    unconfirmedCOVNotificationMultiple = ...
    confirmedAuditNotification = ...
    auditLogQuery = ...
    unconfirmedAuditNotification = ...
    whoAmI = ...
    youAre = ...

class StatusFlags(BitString):
    inAlarm = ...
    fault = ...
    overridden = ...
    outOfService = ...

class AccessThreatLevel(Unsigned):
    _low_limit = ...
    _high_limit = ...

class MACAddress(OctetString):
    @classmethod
    def cast(cls, arg: str | int | bytes | bytearray) -> bytes | None: ...

class IPOctetString(OctetString):
    @overload
    @classmethod
    def cast(cls, arg: str) -> bytes | None: ...
    @overload
    @classmethod
    def cast(cls, arg: bytes | bytearray) -> bytes | bytearray: ...
    def __repr__(self) -> str: ...

class IPv4OctetString(OctetString):
    @classmethod
    def cast(cls, arg: str | bytes | bytearray) -> bytes | bytearray | None: ...
    def __repr__(self) -> str: ...

class IPv6OctetString(OctetString):
    @classmethod
    def cast(cls, arg: str | bytes | bytearray) -> bytes | bytearray | None: ...
    def __repr__(self) -> str: ...

property_index_re = ...

class PropertyReference(Sequence):
    _order = ...
    propertyIdentifier = ...
    propertyArrayIndex = ...
    def __init__(
        self,
        arg: int | str | tuple[_Any, ...] | None = ...,
        *,
        vendor_info: Optional[VendorInfo] = ...,
        vendor_identifier: Optional[int] = ...,
        **kwargs: _Any,
    ) -> None: ...
    @classmethod
    def cast[T: (int, str, tuple[_Any, ...])](cls, arg: T) -> T: ...

class PropertyValue(Sequence):
    _order = ...
    propertyIdentifier = ...
    propertyArrayIndex = ...
    value = ...
    priority = ...

class ObjectPropertyReference(Sequence):
    _order = ...
    objectIdentifier = ...
    propertyIdentifier = ...
    propertyArrayIndex = ...

class ObjectPropertyValue(Sequence):
    _order = ...
    objectIdentifier = ...
    propertyIdentifier = ...
    propertyArrayIndex = ...
    value = ...
    priority = ...

class DeviceObjectPropertyReference(Sequence):
    _order = ...
    objectIdentifier = ...
    propertyIdentifier = ...
    propertyArrayIndex = ...
    deviceIdentifier = ...

class DeviceObjectPropertyValue(Sequence):
    _order = ...
    deviceIdentifier = ...
    objectIdentifier = ...
    propertyIdentifier = ...
    arrayIndex = ...
    value = ...

class DeviceObjectReference(Sequence):
    _order = ...
    deviceIdentifier = ...
    objectIdentifier = ...

class DateTime(Sequence):
    _order = ...
    date = Date
    time = Time
    def __init__(
        self, arg: Optional[datetime.datetime] = ..., **kwargs: _Any
    ) -> None: ...
    @classmethod
    def now(cls: type, when: Optional[float] = ...) -> DateTime:
        """
        Return the current date and time.
        """
        ...

    @property
    def is_special(self) -> bool: ...
    @property
    def datetime(self) -> datetime.datetime:
        """Return the value as a datetime.datetime object."""
        ...

    def isoformat(self) -> str: ...
    @classmethod
    def fromisoformat(cls: type, datetime_string: str) -> Date: ...
    @classmethod
    def cast[T: (DateTime, datetime)](cls, arg: T) -> T: ...
    def __str__(self) -> str: ...

class TimeValue(Sequence):
    _order = ...
    time = ...
    value = ...

class DeviceAddress(Sequence):
    _order = ...
    networkNumber = ...
    macAddress = ...
    def __init__(self, arg: Optional[str] = ..., **kwargs: _Any) -> None: ...
    @classmethod
    def cast[
        T: (
            bytes,
            bytearray,
            str,
            dict[_Any, _Any],
            IPv4Address,
            IPv6Address,
            DeviceAddress,
        )
    ](cls, arg: T) -> T: ...

_sequence_number = ...

class TimeStamp(Choice):
    time = ...
    sequenceNumber = ...
    dateTime = ...
    @classmethod
    def as_time(cls: type, when: Optional[float] = ...) -> TimeStamp: ...
    @classmethod
    def as_sequenceNumber(cls: type, when: Optional[int] = ...) -> TimeStamp: ...
    @classmethod
    def as_dateTime(cls: type, when: Optional[float] = ...) -> TimeStamp: ...
    def __str__(self) -> str: ...

class Recipient(Choice):
    device = ...
    address = ...

class ListOfRecipient(ListOf(Recipient)): ...

class ErrorType(Sequence):
    _order = ...
    errorClass = ...
    errorCode = ...

class HostAddress(Choice):
    none = ...
    ipAddress = ...
    name = ...
    def __init__(self, arg: Optional[str] = ..., **kwargs: _Any) -> None: ...
    @classmethod
    def cast(
        cls, arg: bytes | bytearray | str | dict[Any, Any] | IPv4Address | IPv6Address
    ) -> bytes | bytearray | str | dict[Any, Any] | IPv4Address | IPv6Address: ...

class HostNPort(Sequence):
    _order = ...
    host = ...
    port = ...
    _address: _Address
    def __init__(
        self,
        arg: Optional[str] = ...,
        *,
        host: Optional[HostAddress] = ...,
        port: Optional[int] = ...,
    ) -> None: ...
    @classmethod
    def cast[T: (str, dict[_Any, _Any], IPv4Address, IPv6Address, HostNPort)](
        cls, arg: T
    ) -> T: ...
    @property
    def address(self) -> _Address:
        """
        Interpret the contents returning an Address that has all the
        tuples necessary for sockets.
        """
        ...

class AccessRule(Sequence):
    _order = ...
    timeRangeSpecifier = ...
    timeRange = ...
    locationSpecifier = ...
    location = ...
    enable = ...

class ArrayOfAccessRule(ArrayOf(AccessRule)): ...

class AccumulatorRecord(Sequence):
    _order = ...
    timestamp = ...
    presentValue = ...
    accumulatedValue = ...
    accumulatorStatus = ...

class ActionCommand(Sequence):
    _order = ...
    deviceIdentifier = ...
    objectIdentifier = ...
    propertyIdentifier = ...
    propertyArrayIndex = ...
    propertyValue = ...
    priority = ...
    postDelay = ...
    quitOnFailure = ...
    writeSuccessFul = ...

class SequenceOfActionCommand(SequenceOf(ActionCommand)): ...

class ActionList(Sequence):
    _order = ...
    action = ...

class ArrayOfActionList(ArrayOf(ActionList)): ...

class Address(Sequence):
    _order = ...
    networkNumber = ...
    macAddress = ...

class AddressBinding(Sequence):
    _order = ...
    deviceObjectIdentifier = ...
    deviceAddress = ...

class ListOfAddressBinding(ListOf(AddressBinding)): ...

class AssignedAccessRights(Sequence):
    _order = ...
    assignedAccessRights = ...
    enable = ...

class ArrayOfAssignedAccessRights(ArrayOf(AssignedAccessRights)): ...

class AssignedLandingCallsLandingCalls(Sequence):
    _order = ...
    floorNumber = ...
    direction = ...

class SequenceOfAssignedLandingCallsLandingCalls(
    SequenceOf(AssignedLandingCallsLandingCalls)
): ...

class AssignedLandingCalls(Sequence):
    _order = ...
    landingCalls = ...

class ArrayOfAssignedLandingCalls(ArrayOf(AssignedLandingCalls)): ...

class AtomicReadFileACKAccessMethodRecordAccess(Sequence):
    _order = ...
    fileStartRecord = ...
    returnedRecordCount = ...
    fileRecordData = ...

class AtomicReadFileACKAccessMethodStreamAccess(Sequence):
    _order = ...
    fileStartPosition = ...
    fileData = ...

class AtomicReadFileRequestAccessMethodChoiceRecordAccess(Sequence):
    _order = ...
    fileStartRecord = ...
    requestedRecordCount = ...

class AtomicReadFileRequestAccessMethodChoiceStreamAccess(Sequence):
    _order = ...
    fileStartPosition = ...
    requestedOctetCount = ...

class AtomicWriteFileRequestAccessMethodChoiceRecordAccess(Sequence):
    _order = ...
    fileStartRecord = ...
    recordCount = ...
    fileRecordData = ...

class AtomicWriteFileRequestAccessMethodChoiceStreamAccess(Sequence):
    _order = ...
    fileStartPosition = ...
    fileData = ...

class AuditLogQueryParametersBySource(Sequence):
    _order = ...
    sourceDeviceIdentifier = ...
    sourceDeviceAddress = ...
    sourceObjectIdentifier = ...
    operations = ...
    successfulActionsOnly = ...

class AuditLogQueryParametersByTarget(Sequence):
    _order = ...
    targetDeviceIdentifier = ...
    targetDeviceAddress = ...
    targetObjectIdentifier = ...
    targetPropertyIdentifier = ...
    targetArrayIndex = ...
    targetPriority = ...
    operations = ...
    successfulActionsOnly = ...

class AuditNotification(Sequence):
    _order = ...
    sourceTimestamp = ...
    targetTimestamp = ...
    sourceDevice = ...
    sourceObject = ...
    operation = ...
    sourceComment = ...
    targetComment = ...
    invokeID = ...
    sourceUserID = ...
    sourceUserRole = ...
    targetDevice = ...
    targetObject = ...
    targetProperty = ...
    targetPriority = ...
    targetValue = ...
    currentValue = ...
    result = ...

class AuditLogRecordLogDatum(Choice):
    logStatus = ...
    auditNotification = ...
    timeChange = ...

class AuditLogRecord(Sequence):
    _order = ...
    timestamp = ...
    logDatum = ...

class ListOfAuditLogRecord(ListOf(AuditLogRecord)): ...

class AuditLogRecordResult(Sequence):
    _order = ...
    sequenceNumber = ...
    logRecord = ...

class AuthenticationFactor(Sequence):
    _order = ...
    formatType = ...
    formatClass = ...
    value = ...

class AuthenticationFactorFormat(Sequence):
    _order = ...
    formatType = ...
    vendorId = ...
    vendorFormat = ...

class ArrayOfAuthenticationFactorFormat(ArrayOf(AuthenticationFactorFormat)): ...

class AuthenticationPolicyPolicy(Sequence):
    _order = ...
    credentialDataInput = ...
    index = ...

class SequenceOfAuthenticationPolicyPolicy(SequenceOf(AuthenticationPolicyPolicy)): ...

class AuthenticationPolicy(Sequence):
    _order = ...
    policy = ...
    orderEnforced = ...
    timeout = ...

class ArrayOfAuthenticationPolicy(ArrayOf(AuthenticationPolicy)): ...

class BDTEntry(Sequence):
    _order = ...
    bbmdAddress = ...
    broadcastMask = ...
    _address: _Address
    def __init__(
        self,
        arg: Optional[str] = ...,
        *,
        bbmdAddress: Optional[HostNPort] = ...,
        broadcastMask: Optional[IPv4OctetString] = ...,
    ) -> None: ...
    @classmethod
    def cast[T: (str, dict[_Any, _Any])](cls, arg: T) -> T: ...
    @property
    def address(self) -> _Address:
        """
        Interpret the contents returning an Address that has all the
        tuples necessary for sockets.
        """
        ...

class ListOfBDTEntry(ListOf(BDTEntry)): ...

class RecipientProcess(Sequence):
    _order = ...
    recipient = ...
    processIdentifier = ...

class COVMultipleSubscriptionListOfCOVReference(Sequence):
    _order = ...
    monitoredProperty = ...
    covIncrement = ...
    timestamped = ...

class SequenceOfCOVMultipleSubscriptionListOfCOVReference(
    SequenceOf(COVMultipleSubscriptionListOfCOVReference)
): ...

class COVMultipleSubscriptionList(Sequence):
    _order = ...
    monitoredObjectIdentifier = ...
    listOfCOVReferences = ...

class SequenceOfCOVMultipleSubscriptionList(
    SequenceOf(COVMultipleSubscriptionList)
): ...

class COVMultipleSubscription(Sequence):
    _order = ...
    recipient = ...
    issueConfirmedNotifications = ...
    timeRemaining = ...
    maxNotificationDelay = ...
    listOfCOVSubscriptionSpecifications = ...

class ListOfCOVMultipleSubscription(ListOf(COVMultipleSubscription)): ...

class COVNotificationParameters(Sequence):
    _order = ...
    subscriberProcessIdentifier = ...
    initiatingDeviceIdentifier = ...
    monitoredObjectIdentifier = ...
    timeRemaining = ...
    listOfValues = ...

class COVSubscription(Sequence):
    _order = ...
    recipient = ...
    monitoredPropertyReference = ...
    issueConfirmedNotifications = ...
    timeRemaining = ...
    covIncrement = ...

class ListOfCOVSubscription(ListOf(COVSubscription)): ...

class CredentialAuthenticationFactor(Sequence):
    _order = ...
    disable = ...
    authenticationFactor = ...

class ArrayOfCredentialAuthenticationFactor(
    ArrayOf(CredentialAuthenticationFactor)
): ...

class DailySchedule(Sequence):
    _order = ...
    daySchedule = ...

class ArrayOfDailySchedule(ArrayOf(DailySchedule)): ...

class DateRange(Sequence):
    _order = ...
    startDate = ...
    endDate = ...

class Destination(Sequence):
    _order = ...
    validDays = ...
    fromTime = ...
    toTime = ...
    recipient = ...
    processIdentifier = ...
    issueConfirmedNotifications = ...
    transitions = ...

class ListOfDestination(ListOf(Destination)): ...

class PropertyStates(Choice):
    booleanValue = ...
    binaryValue = ...
    eventType = ...
    polarity = ...
    programChange = ...
    programState = ...
    reasonForHalt = ...
    reliability = ...
    state = ...
    systemStatus = ...
    units = ...
    unsignedValue = ...
    lifeSafetyMode = ...
    lifeSafetyState = ...
    restartReason = ...
    doorAlarmState = ...
    action = ...
    doorSecuredStatus = ...
    doorStatus = ...
    doorValue = ...
    fileAccessMethod = ...
    lockStatus = ...
    lifeSafetyOperation = ...
    maintenance = ...
    nodeType = ...
    notifyType = ...
    securityLevel = ...
    shedState = ...
    silencedState = ...
    accessEvent = ...
    zoneOccupancyState = ...
    accessCredentialDisableReason = ...
    accessCredentialDisable = ...
    authenticationStatus = ...
    backupState = ...
    writeStatus = ...
    lightingInProgress = ...
    lightingOperation = ...
    lightingTransition = ...

class SequenceOfPropertyStates(SequenceOf(PropertyStates)): ...

class NotificationParametersChangeOfBitstring(Sequence):
    _order = ...
    referencedBitstring = ...
    statusFlags = ...

class NotificationParametersChangeOfLifeSafety(Sequence):
    _order = ...
    newState = ...
    newMode = ...
    statusFlags = ...
    operationExpected = ...

class NotificationParametersChangeOfState(Sequence):
    _order = ...
    newState = ...
    statusFlags = ...

class NotificationParametersChangeOfValueNewValue(Choice):
    changedBits = ...
    changedValue = ...

class NotificationParametersChangeOfValue(Sequence):
    _order = ...
    newValue = ...
    statusFlags = ...

class NotificationParametersCommandFailure(Sequence):
    _order = ...
    commandValue = ...
    statusFlags = ...
    feedbackValue = ...

class NotificationParametersFloatingLimit(Sequence):
    _order = ...
    referenceValue = ...
    statusFlags = ...
    setpointValue = ...
    errorLimit = ...

class NotificationParametersOutOfRange(Sequence):
    _order = ...
    exceedingValue = ...
    statusFlags = ...
    deadband = ...
    exceededLimit = ...

class NotificationParametersComplexEventType(Sequence):
    _order = ...
    complexEventType = ...

class NotificationParametersDoubleOutOfRangeType(Sequence):
    _order = ...
    exceedingValue = ...
    statusFlags = ...
    deadband = ...
    exceededLimit = ...

class NotificationParametersSignedOutOfRangeType(Sequence):
    _order = ...
    exceedingValue = ...
    statusFlags = ...
    deadband = ...
    exceededLimit = ...

class NotificationParametersUnsignedOutOfRangeType(Sequence):
    _order = ...
    exceedingValue = ...
    statusFlags = ...
    deadband = ...
    exceededLimit = ...

class NotificationParametersChangeOfCharacterStringType(Sequence):
    _order = ...
    changedValue = ...
    statusFlags = ...
    alarmValue = ...

class NotificationParametersChangeOfStatusFlagsType(Sequence):
    _order = ...
    presentValue = ...
    referencedFlags = ...

class NotificationParametersChangeOfReliabilityType(Sequence):
    _order = ...
    reliability = ...
    statusFlags = ...
    propertyValues = ...

class NotificationParametersAccessEventType(Sequence):
    _order = ...
    accessEvent = ...
    statusFlags = ...
    accessEventTag = ...
    accessEventTime = ...
    accessCredential = ...
    authenicationFactor = ...

class NotificationParametersExtendedParametersType(Choice):
    null = ...
    real = ...
    integer = ...
    boolean = ...
    double = ...
    octet = ...
    bitstring = ...
    enum = ...
    propertyValue = ...

class NotificationParametersExtended(Sequence):
    _order = ...
    vendorId = ...
    extendedEventType = ...
    parameters = ...

class NotificationParametersBufferReady(Sequence):
    _order = ...
    bufferProperty = ...
    previousNotification = ...
    currentNotification = ...

class NotificationParametersUnsignedRange(Sequence):
    _order = ...
    exceedingValue = ...
    statusFlags = ...
    exceedingLimit = ...

class NotificationParameters(Choice):
    changeOfBitstring = ...
    changeOfState = ...
    changeOfValue = ...
    commandFailure = ...
    floatingLimit = ...
    outOfRange = ...
    complexEventType = ...
    changeOfLifeSafety = ...
    extended = ...
    bufferReady = ...
    unsignedRange = ...
    accessEvent = ...
    doubleOutOfRange = ...
    signedOutOfRange = ...
    unsignedOutOfRange = ...
    changeOfCharacterString = ...
    changeOfStatusFlags = ...
    changeOfReliability = ...

class EventNotificationParameters(Sequence):
    _order = ...
    processIdentifier = ...
    initiatingDeviceIdentifier = ...
    eventObjectIdentifier = ...
    timeStamp = ...
    notificationClass = ...
    priority = ...
    eventType = ...
    messageText = ...
    notifyType = ...
    ackRequired = ...
    fromState = ...
    toState = ...
    eventValues = ...

class EventLogRecordLogDatum(Choice):
    logStatus = ...
    notification = ...
    timeChange = ...

class EventLogRecord(Sequence):
    _order = ...
    timestamp = ...
    logDatum = ...

class ListOfEventLogRecord(ListOf(EventLogRecord)): ...

class EventNotificationSubscription(Sequence):
    _order = ...
    recipient = ...
    processIdentifier = ...
    issueConfirmedNotifications = ...
    timeRemaining = ...

class ListOfEventNotificationSubscription(ListOf(EventNotificationSubscription)): ...

class EventParameterAccessEventAccessEvent(Sequence):
    _order = ...
    listOfAccessEvents = ...
    accessEventTimeReference = ...

class SequenceOfEventParameterAccessEventAccessEvent(
    SequenceOf(EventParameterAccessEventAccessEvent)
): ...

class EventParameterAccessEvent(Sequence):
    _order = ...
    accessEvent = ...

class EventParameterBufferReady(Sequence):
    _order = ...
    notificationThreshold = ...
    previousNotificationCount = ...

class EventParameterChangeOfBitstring(Sequence):
    _order = ...
    timeDelay = ...
    bitmask = ...
    listOfBitstringValues = ...

class EventParameterChangeOfCharacterString(Sequence):
    _order = ...
    timeDelay = ...
    listOfAlarmValues = ...

class EventParameterChangeOfDiscreteValue(Sequence):
    _order = ...
    timeDelay = ...

class EventParameterChangeOfLifeSafety(Sequence):
    _order = ...
    timeDelay = ...
    listOfLifeSafetyAlarmValues = ...
    listOfAlarmValues = ...
    modePropertyReference = ...

class EventParameterChangeOfState(Sequence):
    _order = ...
    timeDelay = ...
    listOfValues = ...

class EventParameterChangeOfStatusFlags(Sequence):
    _order = ...
    timeDelay = ...
    selectedFlags = ...

class EventParameterChangeOfTimer(Sequence):
    _order = ...
    timeDelay = ...
    alarmValues = ...
    updateTimeReference = ...

class EventParameterChangeOfValueCOVCriteria(Choice):
    bitmask = ...
    referencedPropertyIncrement = ...

class EventParameterChangeOfValue(Sequence):
    _order = ...
    timeDelay = ...
    covCriteria = ...

class EventParameterCommandFailure(Sequence):
    _order = ...
    timeDelay = ...
    feedbackPropertyReference = ...

class EventParameterDoubleOutOfRange(Sequence):
    _order = ...
    timeDelay = ...
    lowLimit = ...
    highLimit = ...
    deadband = ...

class EventParameterExtendedParameters(Choice):
    null = ...
    real = ...
    integer = ...
    boolean = ...
    double = ...
    octet = ...
    bitstring = ...
    enum = ...
    reference = ...

class SequenceOfEventParameterExtendedParameters(
    SequenceOf(EventParameterExtendedParameters)
): ...

class EventParameterExtended(Sequence):
    _order = ...
    vendorId = ...
    extendedEventType = ...
    parameters = ...

class EventParameterFloatingLimit(Sequence):
    _order = ...
    timeDelay = ...
    setpointReference = ...
    lowDiffLimit = ...
    highDiffLimit = ...
    deadband = ...

class EventParameterOutOfRange(Sequence):
    _order = ...
    timeDelay = ...
    lowLimit = ...
    highLimit = ...
    deadband = ...

class EventParameterSignedOutOfRange(Sequence):
    _order = ...
    timeDelay = ...
    lowLimit = ...
    highLimit = ...
    deadband = ...

class EventParameterUnsignedOutOfRange(Sequence):
    _order = ...
    timeDelay = ...
    lowLimit = ...
    highLimit = ...
    deadband = ...

class EventParameterUnsignedRange(Sequence):
    _order = ...
    timeDelay = ...
    lowLimit = ...
    highLimit = ...

class FDTEntry(Sequence):
    _order = ...
    bacnetIPAddress = ...
    timeToLive = ...
    remainingTimeToLive = ...

class ListOfFDTEntry(ListOf(FDTEntry)): ...

class FaultParameterCharacterString(Sequence):
    _order = ...
    listOfFaultValues = ...

class FaultParameterExtendedParameters(Choice):
    null = ...
    real = ...
    unsigned = ...
    boolean = ...
    integer = ...
    double = ...
    octet = ...
    characterString = ...
    bitstring = ...
    enum = ...
    date = ...
    time = ...
    objectIdentifier = ...
    reference = ...

class SequenceOfFaultParameterExtendedParameters(
    SequenceOf(FaultParameterExtendedParameters)
): ...

class FaultParameterExtended(Sequence):
    _order = ...
    vendorId = ...
    extendedFaultType = ...
    parameters = ...

class FaultParameterLifeSafety(Sequence):
    _order = ...
    listOfFaultValues = ...
    modePropertyReference = ...

class FaultParameterState(Sequence):
    _order = ...
    listOfFaultValues = ...

class FaultParameterStatusFlags(Sequence):
    _order = ...
    statusFlagsReference = ...

class FaultParameterOutOfRangeValue(Choice):
    real = ...
    unsigned = ...
    double = ...
    integer = ...

class FaultParameterOutOfRange(Sequence):
    _order = ...
    minNormalValue = ...
    maxNormalValue = ...

class FaultParametersFaultListed(Sequence):
    _order = ...
    faultListReference = ...

class GetAlarmSummaryAlarmSummary(Sequence):
    _order = ...
    objectIdentifier = ...
    alarmState = ...
    acknowledgedTransitions = ...

class GetEnrollmentSummaryRequestPriorityFilterType(Sequence):
    _order = ...
    minPriority = ...
    maxPriority = ...

class GetEnrollmentSummaryEnrollmentSummary(Sequence):
    _order = ...
    objectIdentifier = ...
    eventType = ...
    eventState = ...
    priority = ...
    notificationClass = ...

class GetEventInformationEventSummary(Sequence):
    _order = ...
    objectIdentifier = ...
    eventState = ...
    acknowledgedTransitions = ...
    eventTimeStamps = ...
    notifyType = ...
    eventEnable = ...
    eventPriorities = ...

class LightingCommand(Sequence):
    _order = ...
    operation = ...
    targetLevel = ...
    rampRate = ...
    stepIncrement = ...
    fadeTime = ...
    priority = ...

class ChannelValue(Choice):
    null = ...
    real = ...
    enumerated = ...
    unsigned = ...
    boolean = ...
    integer = ...
    double = ...
    time = ...
    characterString = ...
    octetString = ...
    bitString = ...
    date = ...
    objectidentifier = ...
    lightingCommand = ...

class GroupChannelValue(Sequence):
    _order = ...
    channel = ...
    overridingPriority = ...
    value = ...

class KeyIdentifier(Sequence):
    _order = ...
    algorithm = ...
    keyId = ...

class LandingCallStatusCommand(Choice):
    direction = ...
    destination = ...

class LandingCallStatus(Sequence):
    _order = ...
    floorNumber = ...
    command = ...
    floorText = ...

class LandingDoorStatusLandingDoor(Sequence):
    _order = ...
    floorNumber = ...
    doorStatus = ...

class LandingDoorStatus(Sequence):
    _order = ...
    landingDoors = ...

class LiftCarCallList(Sequence):
    _order = ...
    floorNumbers = ...

class LogDataLogData(Choice):
    booleanValue = ...
    realValue = ...
    enumValue = ...
    unsignedValue = ...
    signedValue = ...
    bitstringValue = ...
    nullValue = ...
    failure = ...
    anyValue = ...

class LogData(Choice):
    logStatus = ...
    logData = ...
    timeChange = ...

class LogMultipleRecord(Sequence):
    _order = ...
    timestamp = ...
    logData = ...

class LogRecordLogDatum(Choice):
    logStatus = ...
    booleanValue = ...
    realValue = ...
    enumValue = ...
    unsignedValue = ...
    signedValue = ...
    bitstringValue = ...
    nullValue = ...
    failure = ...
    timeChange = ...
    anyValue = ...

class LogRecord(Sequence):
    _order = ...
    timestamp = ...
    logDatum = ...
    statusFlags = ...

class AnyAtomicExtended(AnyAtomic):
    @classmethod
    def cast(cls: type, arg: _Any) -> _Any:
        """Return a valid value for the class."""
        ...

    def get_value_type(self) -> type:
        """Return the datatype encoded in the Any iff possible."""
        ...

class NameValue(Sequence):
    _order = ...
    name = ...
    value = AnyAtomicExtended
    def encode(self) -> TagList: ...
    @classmethod
    def decode(cls, tag_list: TagList) -> NameValue:  # pyright: ignore[reportIncompatibleMethodOverride]
        """Decode an element from a tag list."""
        ...

class NameValueCollection(Sequence):
    _order = ...
    members = ...

class NetworkSecurityPolicy(Sequence):
    _order = ...
    portId = ...
    securityLevel = ...

class PortPermission(Sequence):
    _order = ...
    portId = ...
    enabled = ...

class Prescale(Sequence):
    _order = ...
    multiplier = ...
    moduloDivide = ...

class PropertyAccessResultAccessResult(Choice):
    propertyValue = ...
    propertyAccessError = ...

class PropertyAccessResult(Sequence):
    _order = ...
    objectIdentifier = ...
    propertyIdentifier = ...
    propertyArrayIndex = ...
    deviceIdentifier = ...
    accessResult = ...

class RangeByPosition(Sequence):
    _order = ...
    referenceIndex = ...
    count = ...

class RangeBySequenceNumber(Sequence):
    _order = ...
    referenceSequenceNumber = ...
    count = ...

class RangeByTime(Sequence):
    _order = ...
    referenceTime = ...
    count = ...

class ReadAccessResultElementChoice(Choice):
    propertyValue = ...
    propertyAccessError = ...

class ReadAccessResultElement(Sequence):
    _order = ...
    propertyIdentifier = ...
    propertyArrayIndex = ...
    readResult = ...

class ReadAccessResult(Sequence):
    _order = ...
    objectIdentifier = ...
    listOfResults = ...

class ReadAccessSpecification(Sequence):
    _order = ...
    objectIdentifier = ...
    listOfPropertyReferences = ...

class RouterEntry(Sequence):
    _order = ...
    networkNumber = ...
    macAddress = ...
    status = ...
    performanceIndex = ...

class SecurityKeySet(Sequence):
    _order = ...
    keyRevision = ...
    activationTime = ...
    expirationTime = ...
    keyIds = ...

class SessionKey(Sequence):
    _order = ...
    sessionKey = ...
    peerAddress = ...

class SetpointReference(Sequence):
    _order = ...
    setpointReference = ...

class WeekNDay(OctetString):
    def __str__(self) -> str: ...

class CalendarEntry(Choice):
    date = ...
    dateRange = ...
    weekNDay = ...

class SpecialEventPeriod(Choice):
    calendarEntry = ...
    calendarReference = ...

class SpecialEvent(Sequence):
    _order = ...
    period = ...
    listOfTimeValues = ...
    eventPriority = ...

class StageLimitValue(Sequence):
    _order = ...
    limit = ...
    values = ...
    deadband = ...

class VMACEntry(Sequence):
    _order = ...
    virtualMACAddress = ...
    nativeMACAddress = ...

class VTSession(Sequence):
    _order = ...
    localVtSessionID = ...
    remoteVtSessionID = ...
    remoteVtAddress = ...

class WhoHasLimits(Sequence):
    _order = ...
    deviceInstanceRangeLowLimit = ...
    deviceInstanceRangeHighLimit = ...

class WriteAccessSpecification(Sequence):
    _order = ...
    objectIdentifier = ...
    listOfProperties = ...

class AtomicReadFileACKAccessMethodChoice(Choice):
    streamAccess = ...
    recordAccess = ...

class AtomicReadFileRequestAccessMethodChoice(Choice):
    streamAccess = ...
    recordAccess = ...

class AtomicWriteFileRequestAccessMethodChoice(Choice):
    streamAccess = ...
    recordAccess = ...

class AuditLogQueryParameters(Choice):
    byTarget = ...
    bySource = ...

class ClientCOV(Choice):
    realIncrement = ...
    defaultIncrement = ...

class ConfirmedTextMessageRequestMessageClass(Choice):
    numeric = ...
    character = ...

class CreateObjectRequestObjectSpecifier(Choice):
    objectType = ...
    objectIdentifier = ...

class EventParameter(Choice):
    changeOfBitstring = ...
    changeOfState = ...
    changeOfValue = ...
    commandFailure = ...
    floatingLimit = ...
    outOfRange = ...
    changeOfLifesafety = ...
    extended = ...
    bufferReady = ...
    unsignedRange = ...
    accessEvent = ...
    doubleOutOfRange = ...
    signedOutOfRange = ...
    unsignedOutOfRange = ...
    changeOfCharacterstring = ...
    changeOfStatusflags = ...
    none = ...
    changeOfDiscreteValue = ...
    changeOfTimer = ...

class FaultParameter(Choice):
    none = ...
    faultCharacterString = ...
    faultExtended = ...
    faultLifeSafety = ...
    faultState = ...
    faultStatusFlags = ...
    faultOutOfRange = ...
    faultListed = ...

class ObjectSelector(Choice):
    none = ...
    object = ...
    objectType = ...

class OptionalBinaryPV(Choice):
    null = ...
    binaryPV = ...

class OptionalCharacterString(Choice):
    null = ...
    characterString = ...

class OptionalPriorityFilter(Choice):
    null = ...
    filter = ...

class OptionalReal(Choice):
    null = ...
    real = ...

class OptionalUnsigned(Choice):
    null = ...
    unsigned = ...

class PriorityValue(Choice):
    null = ...
    real = ...
    enumerated = ...
    unsigned = ...
    boolean = ...
    integer = ...
    double = ...
    time = ...
    characterString = ...
    octetString = ...
    bitString = ...
    date = ...
    objectidentifier = ...
    constructedValue = ...
    datetime = ...
    def __init__(self, arg: _Any = ..., **kwargs: _Any) -> None: ...

class PriorityArray(
    ArrayOf(PriorityValue, _length=16, _prototype=PriorityValue(null=()))
): ...

class ProcessIdSelection(Choice):
    processIdentifier = ...
    nullValue = ...

class Range(Choice):
    byPosition = ...
    bySequenceNumber = ...
    byTime = ...

class Scale(Choice):
    floatScale = ...
    integerScale = ...

class ShedLevel(Choice):
    percent = ...
    level = ...
    amount = ...

class TimerStateChangeValue(Choice):
    null = ...
    boolean = ...
    unsigned = ...
    integer = ...
    real = ...
    double = ...
    octetstring = ...
    characterstring = ...
    bitstring = ...
    enumerated = ...
    date = ...
    time = ...
    objectidentifier = ...
    noValue = ...
    constructedValue = ...
    datetime = ...
    lightingCommand = ...

class UnconfirmedTextMessageRequestMessageClass(Choice):
    numeric = ...
    character = ...

class ValueSource(Choice):
    none = ...
    object = ...
    address = ...

class WhoHasObject(Choice):
    objectIdentifier = ...
    objectName = ...
